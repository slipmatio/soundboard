name: Tests
on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - 'tests/**'
      - 'yarn.lock'
      - '.github/workflows/tests.yml'
  pull_request:
    paths:
      - 'packages/**'
      - 'tests/**'
      - 'yarn.lock'
      - '.github/workflows/tests.yml'

defaults:
  run:
    shell: 'bash'

jobs:
  e2e:
    strategy:
      matrix:
        os: [macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      ## Yarn dir
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      ## Cache
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn2-

      ## Cache
      - name: Cache node_modules
        id: cache-node-modules2
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules2-

      - name: Configure pip caching
        id: cache-pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Download standalone Python
        run: |
          ./downloadPython.sh

      ## Dependencies
      - name: Install Dependencies
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      ## Test
      - name: Run tests
        run: yarn test
